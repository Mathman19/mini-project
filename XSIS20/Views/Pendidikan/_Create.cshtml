@model XSIS20.ViewModel.PendidikanViewModel


@using (Html.BeginForm("Create", "Pendidikan", FormMethod.Post, new { id = "form-create", name = "form-create" }))
{
    <style>
        label {
            font-size: 12px;
            font-weight: lighter;
        }

        input {
            max-width: none;
        }

        select{
            max-width: none;
        }

        .wm{
            max-width: none;
        }

        .btn-cancel{
            background-color: #eb6200;
        }

    </style>
    @Html.AntiForgeryToken()

    <div class="form-horizontal container-fluid">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
                @Html.LabelFor(model => model.is_delete, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.is_delete)
                        @Html.ValidationMessageFor(model => model.is_delete, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@
        @*<div class="form-group">
                @Html.LabelFor(model => model.biodata_id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.biodata_id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.biodata_id, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <p class="text-nowrap">
                        @Html.LabelFor(model => model.school_name, htmlAttributes: new { @class = "control-label col-md-2" })
                    </p>
                    @Html.EditorFor(model => model.school_name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.school_name, "", new { @class = "text-danger" })
                    @*<div class="col-md-10">
                        </div>*@
                </div>
            </div>
            <div class="col-lg-6">
                <div class="col-lg-6">
                    <div class="form-group">
                        <p class="text-nowrap">
                            @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
                        </p>
                        @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                        @*<div class="col-md-10">
                            </div>*@
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <p class="text-nowrap">
                            @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2" })
                        </p>
                        @Html.EditorFor(model => model.country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
                        @*<div class="col-md-10">
                            </div>*@
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <p class="text-nowrap">
                        @Html.LabelFor(model => model.education_level_id, htmlAttributes: new { @class = "control-label col-md-2" })
                    </p>
                    @*@Html.EditorFor(model => model.education_level_id, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.education_level_id, (IEnumerable<SelectListItem>)ViewBag.EducationList, "-- Pilih --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.education_level_id, "", new { @class = "text-danger" })
                    @*<div class="col-md-10">
                        </div>*@
                </div>
            </div>
            <div class="col-lg-6">
                <div class="col-lg-6">

                    <div class="form-group">
                        <p class="text-nowrap">
                            @Html.LabelFor(model => model.entry_year, htmlAttributes: new { @class = "control-label col-md-2" })
                        </p>
                        @*@Html.EditorFor(model => model.entry_year, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.entry_year, (IEnumerable<SelectListItem>)ViewBag.Years, "-- Pilih --", new { @class = "form-control" }) 
                        @Html.ValidationMessageFor(model => model.entry_year, "", new { @class = "text-danger" })
                        @*<div class="col-md-10">
                            </div>*@
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <p class="text-nowrap">
                            @Html.LabelFor(model => model.graduation_year, htmlAttributes: new { @class = "control-label col-md-2" })
                        </p>
                        @*@Html.EditorFor(model => model.graduation_year, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.graduation_year, (IEnumerable<SelectListItem>)ViewBag.Years, "-- Pilih --", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.graduation_year, "", new { @class = "text-danger" })
                        @*<div class="col-md-10">
                            </div>*@
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <p class="text-nowrap">
                        @Html.LabelFor(model => model.major, htmlAttributes: new { @class = "control-label col-md-2" })
                    </p>
                    @Html.EditorFor(model => model.major, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.major, "", new { @class = "text-danger" })
                    @*<div class="col-md-10">
                        </div>*@
                </div>
            </div>
            <div class="col-lg-6">
                <div class="col-lg-12">
                    <div class="form-group">
                        <p class="text-nowrap">
                            @Html.LabelFor(model => model.gpa, htmlAttributes: new { @class = "control-label col-md-1" })
                        </p>
                        @*@Html.EditorFor(model => model.gpa, new { htmlAttributes = new { @class = "form-control"} })*@
                        <input class="form-control text-box single-line" id="gpa" name="gpa" type="text" value="0">
                        @Html.ValidationMessageFor(model => model.gpa, "", new { @class = "text-danger" })
                        @*<div class="col-md-10">
                            </div>*@
                    </div>
                </div>
            </div>
        </div>
        <div class="row form-group">
            <p class="text-nowrap">
                @Html.LabelFor(model => model.notes, htmlAttributes: new { @class = "control-label col-md-1" })
            </p>
            <textarea class="form-control text-box single-line wm" rows="3" data-val="true" data-val-length="The field notes must be a string with a maximum length of 1000." data-val-length-max="1000" id="notes" name="notes" type="text" value=""></textarea>
            @Html.ValidationMessageFor(model => model.notes, "", new { @class = "text-danger" })
            @*<div class="col-lg-10">
                </div>*@
        </div>



        <div class="form-group">
            <div class="col-md-3 col-md-offset-9">
                <input type="button" value="Batal" data-dismiss="modal" class="btn btn-default btn-cancel" /><input type="submit" value="Simpan" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
    $("#form-create").submit(function () {
        $.ajax({
            url: this.action,
            type: this.method,
            data: $(this).serialize(),
            success: function (result) {
                if (result.success) {
                    var entity = result.entity;
                    alert('Save successful. \nSchool Name: ' + entity.school_name);
                    $(".modal").modal("hide");
                    GetList();
                } else {
                    alert('Eror. \nMessage: ' + result.message)
                }
            }
        });
        return false;
    });
</script>
