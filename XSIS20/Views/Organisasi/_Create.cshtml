@model XSIS20.ViewModel.OrganisasiViewModel


@using (Html.BeginForm())
{
    <style>
        label {
            font-size: 12px;
            font-weight: lighter;
        }

        input {
            max-width: none;
        }

        select {
            max-width: none;
        }

        .wm {
            max-width: none;
        }

        .btn-cancel {
            background-color: #eb6200;
        }
    </style>
    @Html.AntiForgeryToken()

    <div class="form-horizontal container-fluid">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
                @Html.LabelFor(model => model.is_delete, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.is_delete)
                        @Html.ValidationMessageFor(model => model.is_delete, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.biodata_id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.biodata_id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.biodata_id, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <p class="text-nowrap">
                        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                    </p>
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                    @*<div class="col-md-10">
                        </div>*@
                </div>
            </div>
            <div class="col-lg-6">
                <div class="col-lg-12">
                    <div class="form-group">
                        <p class="text-nowrap">
                            @Html.LabelFor(model => model.position, htmlAttributes: new { @class = "control-label col-md-2" })
                        </p>
                        @Html.EditorFor(model => model.position, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.position, "", new { @class = "text-danger" })
                        @*<div class="col-md-10">
                            </div>*@
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <p class="text-nowrap">
                        @Html.LabelFor(model => model.entry_year, htmlAttributes: new { @class = "control-label col-md-2" })
                    </p>
                    @Html.EditorFor(model => model.entry_year, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.entry_year, "", new { @class = "text-danger" })
                    @*<div class="col-md-10">
                        </div>*@
                </div>
            </div>
            <div class="col-lg-6">
                <div class="col-lg-12">
                    <div class="form-group">
                        <p class="text-nowrap">
                            @Html.LabelFor(model => model.exit_year, htmlAttributes: new { @class = "control-label col-md-2" })
                        </p>
                        @Html.EditorFor(model => model.exit_year, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.exit_year, "", new { @class = "text-danger" })
                        @*<div class="col-md-10">
                            </div>*@
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group row">
            <p class="text-nowrap">
                @Html.LabelFor(model => model.responsibility, htmlAttributes: new { @class = "control-label col-md-1" })
            </p>
            @Html.EditorFor(model => model.responsibility, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.responsibility, "", new { @class = "text-danger" })
            @*<div class="col-md-10">
                </div>*@
        </div>

        <div class="form-group row">
            <p class="text-nowrap">
                @Html.LabelFor(model => model.notes, htmlAttributes: new { @class = "control-label col-md-1" })
            </p>
            @Html.EditorFor(model => model.notes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.notes, "", new { @class = "text-danger" })
            @*<div class="col-md-10">
                </div>*@
        </div>

        <div class="form-group">
            <div class="col-md-3 col-md-offset-9">
                <input type="button" value="Batal" data-dismiss="modal" class="btn btn-default btn-cancel" /><input type="submit" value="Simpan" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@Scripts.Render("~/bundles/jqueryval")